import asyncio
import random
import keyboards
import text

from aiogram import Bot, Dispatcher, F
from aiogram.filters import Command
from aiogram.types import Message

# –ø—É—Å—Ç—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –º–æ–∂–Ω–∞ –∑–∞–ø–æ–≤–Ω–∏—Ç–∏ –Ω–æ–≤–∏–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏
modes = ('–≤–∏—Ö—ñ–¥', '–¥–æ–ø–æ–º–æ–≥–∞', '', '–¥–æ–¥–∞–≤–∞–Ω–Ω—è', '–≤—ñ–¥–Ω—ñ–º–∞–Ω–Ω—è', '', '–∫–∞–∑–∏–Ω–æ', '–º–æ–Ω–µ—Ç–∫–∞', '–±–æ—É–ª—ñ–Ω–≥') 
# –≤ –∑–º—ñ–Ω–Ω—ñ–π commands –∑–Ω–∞—Ö–æ–¥—è—Ç—å—Å—è –∫–æ–¥–∏ –¥–µ—è–∫–∏—Ö –∫–æ–º–∞–Ω–¥
commands = (20, 21, 30, 31)

# —Ü—ñ 4 —Å–ª–æ–≤–Ω–∏–∫–∞ –ø–æ—Ç—Ä—ñ–±–Ω—ñ —â–æ–± –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ –¥–∞–Ω–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Ç–∞–∫ —â–æ–± –≤–æ–Ω–∏ –±—É–ª–∏ –ø—Ä–∏–≤'—è–∑–∞–Ω—ñ –∫ id
score = {}             
count_example = {}     
user_in_mode = {}      
user_answers = {}      

print('–í–≤–µ–¥—ñ—Ç—å —Ç–æ–∫–µ–Ω –±–æ—Ç—É:')
token = input()
bot = Bot(f'{token}')
print('–í—Å–µ –≤—ñ—Ä–Ω–æ –ø–æ—á–∏–Ω–∞—î–º–æ –∑–∞–ø—É—Å–∫...')

dp = Dispatcher()

def get_random_number(min, max):
  return random.randrange(min, max)

def clear_all_info_in_id(id):
  if id in user_in_mode:
    user_in_mode.pop(id)
    
  if id in score:
    score.pop(id)

  if id in count_example:
    count_example.pop(id)

  if id in user_answers:
    user_answers.pop(id)

@dp.message(Command('start'))
async def start(message: Message):
  clear_all_info_in_id(message.from_user.id)
  
  await message.answer(f'{text.start_message}', reply_markup=keyboards.main_kb)
  await message.answer(f'{text.commands}')

@dp.message()
async def message_handler(message: Message):
  global score
  global count_example
  
  user_input = message.text.lower()
  user_id = message.from_user.id
  
  if user_input == modes[0] or user_input == '00':
    if user_id in user_in_mode:
      await message.answer(f'–¢–∏ –≤–∏–π—à–æ–≤ —ñ–∑ —Ä–µ–∂–∏–º—É "{user_in_mode[user_id]}".')
      clear_all_info_in_id(user_id)

    else:
      await message.answer(text.warning2)

  elif user_input == modes[1] or user_input == '01':
    clear_all_info_in_id(user_id)
    await message.answer(text.commands)

  elif user_input == modes[3] or user_input == '20':
    if user_id in user_in_mode:
      await message.answer(text.warning1)
      
    else:
      user_in_mode[user_id] = modes[3]
      x = get_random_number(0, 100)
      y = get_random_number(0, 100)
      # —è–∫—â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –º–∞—î –≤–∏–≥–ª—è–¥ —è–∫ –∫–æ–º–∞–Ω–¥–∞ –≤ –∑–º—ñ–Ω–Ω—ñ–π commands, —Ç–æ –ø–µ—Ä—à–µ —á–∏—Å–ª–æ –∑–∞–º—ñ–Ω–∏—Ç–∏
      if (x + y) in commands: 
        x += 5
      user_answers[user_id] = f'{x + y}'
      score[user_id] = 0
      count_example[user_id] = 1
      await message.answer(f'‚ïì \n‚ï†‚ïê –†–µ–∂–∏–º: ‚ûï –î–æ–¥–∞–≤–∞–Ω–Ω—è \n‚ïü –¢—Ä–∏–º–∞–π –ø–µ—Ä—à–∏–π –ø—Ä–∏–∫–ª–∞–¥ \n‚ïü {x} + {y} = ? \n‚ïë \n‚ïë \n‚ïô')

  elif user_input == modes[4] or user_input == '21':
    if user_id in user_in_mode:
      await message.answer(text.warning1)
      
    else:
      user_in_mode[user_id] = modes[4]
      x = get_random_number(0, 100)
      y = get_random_number(0, 100)
      # —è–∫—â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –º–∞—î –≤–∏–≥–ª—è–¥ —è–∫ –∫–æ–º–∞–Ω–¥–∞ –≤ –∑–º—ñ–Ω–Ω—ñ–π commands, —Ç–æ –ø–µ—Ä—à–µ —á–∏—Å–ª–æ –∑–∞–º—ñ–Ω–∏—Ç–∏
      if (x - y) in commands: 
        x -= 5
      user_answers[user_id] = f'{x - y}'
      score[user_id] = 0
      count_example[user_id] = 1
      await message.answer(f'‚ïì \n‚ï†‚ïê –†–µ–∂–∏–º: ‚ûñ –í—ñ–¥–Ω—ñ–º–∞–Ω–Ω—è \n‚ïü –¢—Ä–∏–º–∞–π –ø–µ—Ä—à–∏–π –ø—Ä–∏–∫–ª–∞–¥ \n‚ïü {x} - {y} = ? \n‚ïë \n‚ïë \n‚ïô')

  elif user_input == modes[7] or user_input == '30':
    if user_id in user_in_mode:
      await message.answer(text.warning1)
      
    else:
      user_in_mode[user_id] = modes[7]
      await message.answer('‚ïì \n‚ï†‚ïê –†–µ–∂–∏–º: ü™ô –ú–æ–Ω–µ—Ç–∫–∞ \n‚ïü –¢–∏ —Ä–æ–∑–ø–æ—á–∞–≤ –≥—Ä—É "–ú–æ–Ω–µ—Ç–∫–∞". \n‚ïü –û–±–µ—Ä–∏ "–æ—Ä–µ–ª" –∞–±–æ "—Ä–µ—à–∫–∞" —Ç–∞ –Ω–∞–ø–∏—à–∏ –≤ —á–∞—Ç. \n‚ïô')

  elif user_input == modes[8] or user_input == '31':
    if user_id in user_in_mode:
      await message.answer(text.warning1)

    else:
      user_in_mode[user_id] = modes[8]
      user_answers[user_id] = '—â–µ'
      x = get_random_number(0, 11)
      await message.answer('–¢–∏ –∑–∞–π—à–æ–≤ –≤ —Ä–µ–∂–∏–º –±–æ—É–ª—ñ–Ω–≥. –©–æ–± –∫–∏–Ω—É—Ç–∏ –≤ –∫–µ–≥–ª—ñ —â–µ —Ä–∞–∑ –ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É "—â–µ"')
      if x == 0:
        await message.answer('‚ïì \n‚ïü –ö–∏–¥–æ–∫! üé≥ \n‚ïü –ó–±–∏—Ç–æ –∫–µ–≥–ª—å: 0. \n‚ïü –°–ø—Ä–æ–±—É–π —â–µ. \n‚ïô')
      
      elif x == 10:
        await message.answer('‚ïì \n‚ïü –ö–∏–¥–æ–∫! üé≥ \n‚ïü –ó–±–∏—Ç–æ –∫–µ–≥–ª—å: 10. \n‚ïü Strike! \n‚ïô')

      else:
        await message.answer(f'‚ïì \n‚ïü –ö–∏–¥–æ–∫! üé≥ \n‚ïü –ó–±–∏—Ç–æ –∫–µ–≥–ª—å: {x}. \n‚ïü –ó–∞–ª–∏—à–∏–ª–æ—Å—è: {10 - x}. \n‚ïô')

  # —è–∫—â–æ –≥—Ä–∞–≤–µ—Ü—å –Ω–µ –≤–≤—ñ–≤ –∫–æ–º–∞–Ω–¥—É —Ç–∞ –≤—ñ–Ω –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ —è–∫–æ–º—É—Å—å —Ä–µ–∂–∏–º—ñ
  elif user_id in user_in_mode:
    if user_in_mode[user_id] == modes[3]:
      x = get_random_number(0, 100)
      y = get_random_number(0, 100)
      # —è–∫—â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –º–∞—î –≤–∏–≥–ª—è–¥ —è–∫ –∫–æ–º–∞–Ω–¥–∞ –≤ –∑–º—ñ–Ω–Ω—ñ–π commands, —Ç–æ –ø–µ—Ä—à–µ —á–∏—Å–ª–æ –∑–∞–º—ñ–Ω–∏—Ç–∏
      if (x + y) in commands: 
        x += 5
      if user_answers[user_id] == user_input:
        score[user_id] += 1
        count_example[user_id] += 1
        await message.answer(f'‚ïì \n‚ï†‚ïê –†–µ–∂–∏–º: ‚ûï –î–æ–¥–∞–≤–∞–Ω–Ω—è \n‚ïü –í—ñ—Ä–Ω–æ ‚úÖ \n‚ïü –ü—Ä–∏–∫–ª–∞–¥ {count_example[user_id]} \n‚ïü {x} + {y} = ? \n‚ïü –ü—Ä–∞–≤–∏–ª—å–Ω–∏—Ö –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π: {score[user_id]} –∑ {count_example[user_id]} \n‚ïô')
        
      else:
        count_example[user_id] += 1
        await message.answer(f'‚ïì \n‚ï†‚ïê –†–µ–∂–∏–º: ‚ûï –î–æ–¥–∞–≤–∞–Ω–Ω—è \n‚ïü –ù–µ–≤—ñ—Ä–Ω–æ ‚ùå \n‚ïü –ü—Ä–∏–∫–ª–∞–¥ {count_example[user_id]} \n‚ïü {x} + {y} = ? \n‚ïü –ü—Ä–∞–≤–∏–ª—å–Ω–∏—Ö –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π: {score[user_id]} –∑ {count_example[user_id]} \n‚ïô')
        
      user_answers[user_id] = f'{x + y}'

    elif user_in_mode[user_id] == modes[4]:
      x = get_random_number(0, 100)
      y = get_random_number(0, 100)
      # —è–∫—â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –º–∞—î –≤–∏–≥–ª—è–¥ —è–∫ –∫–æ–º–∞–Ω–¥–∞ –≤ –∑–º—ñ–Ω–Ω—ñ–π commands, —Ç–æ –ø–µ—Ä—à–µ —á–∏—Å–ª–æ –∑–∞–º—ñ–Ω–∏—Ç–∏
      if (x - y) in commands: 
        x -= 5
      if user_answers[user_id] == user_input:
        score[user_id] += 1
        count_example[user_id] += 1
        await message.answer(f'‚ïì \n‚ï†‚ïê –†–µ–∂–∏–º: ‚ûñ –í—ñ–¥–Ω—ñ–º–∞–Ω–Ω—è \n‚ïü –í—ñ—Ä–Ω–æ ‚úÖ \n‚ïü –ü—Ä–∏–∫–ª–∞–¥ {count_example[user_id]} \n‚ïü {x} - {y} = ? \n‚ïü –ü—Ä–∞–≤–∏–ª—å–Ω–∏—Ö –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π: {score[user_id]} –∑ {count_example[user_id]} \n‚ïô')

      else:
        count_example[user_id] += 1
        await message.answer(f'‚ïì \n‚ï†‚ïê –†–µ–∂–∏–º: ‚ûñ –í—ñ–¥–Ω—ñ–º–∞–Ω–Ω—è \n‚ïü –ù–µ–≤—ñ—Ä–Ω–æ ‚ùå \n‚ïü –ü—Ä–∏–∫–ª–∞–¥ {count_example[user_id]} \n‚ïü {x} - {y} = ? \n‚ïü –ü—Ä–∞–≤–∏–ª—å–Ω–∏—Ö –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π: {score[user_id]} –∑ {count_example[user_id]} \n‚ïô')

      user_answers[user_id] = f'{x - y}'

    elif user_in_mode[user_id] == modes[7]:
      # 0 - –æ—Ä–µ–ª, 1 - —Ä–µ—à–∫–∞
      x = get_random_number(0, 2) 
      if x == 0:
        user_answers[user_id] = '–æ—Ä–µ–ª'
      
      else:
        user_answers[user_id] = '—Ä–µ—à–∫–∞'
      
      if user_answers[user_id] == user_input:  
        await message.answer(f'‚ïì \n‚ï†‚ïê –†–µ–∂–∏–º: ü™ô –ú–æ–Ω–µ—Ç–∫–∞ \n‚ïü –í–∏–ø–∞–ª–æ: {user_answers[user_id]}. \n‚ïü –¢–∏ –æ–±—Ä–∞–≤: {user_input}. \n‚ïü –¢–∏ –≤–∏–≥—Ä–∞–≤! üòÉ \n‚ïü –©–æ–± –ø–æ–≤—Ç–æ—Ä–∏—Ç–∏, –Ω–∞–ø–∏—à–∏ –æ—Ä–µ–ª –∞–±–æ —Ä–µ—à–∫—É –≤ —á–∞—Ç. üîÑ \n‚ïô')

      elif user_input == '–æ—Ä–µ–ª' or user_input == '—Ä–µ—à–∫–∞':
        await message.answer(f'‚ïì \n‚ï†‚ïê –†–µ–∂–∏–º: ü™ô –ú–æ–Ω–µ—Ç–∫–∞ \n‚ïü –í–∏–ø–∞–ª–æ: {user_answers[user_id]}. \n‚ïü –¢–∏ –æ–±—Ä–∞–≤: {user_input}. \n‚ïü –¢–∏ –ø—Ä–æ–≥—Ä–∞–≤ ‚òπÔ∏è \n‚ïü –©–æ–± –ø–æ–≤—Ç–æ—Ä–∏—Ç–∏, –Ω–∞–ø–∏—à–∏ –æ—Ä–µ–ª –∞–±–æ —Ä–µ—à–∫—É –≤ —á–∞—Ç. üîÑ \n‚ïô')
      
      else:
        await message.answer('–¢–∏ –≤–≤—ñ–≤ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—É –∫–æ–º–∞–Ω–¥—É. –ù–∞–ø–∏—à–∏ "—Ä–µ—à–∫–∞" –∞–±–æ "–æ—Ä–µ–ª" —â–æ–± –≥—Ä–∞—Ç–∏ —á–∏ "–≤–∏—Ö—ñ–¥" —â–æ–± –≤–∏–π—Ç–∏.')

    elif user_in_mode[user_id] == modes[8]:
      if user_input == user_answers[user_id]:
        x = get_random_number(0, 11)
        if x == 0:
          await message.answer('‚ïì \n‚ïü –ö–∏–¥–æ–∫! üé≥ \n‚ïü –ó–±–∏—Ç–æ –∫–µ–≥–ª—å: 0. \n‚ïü –°–ø—Ä–æ–±—É–π —â–µ. \n‚ïô')

        elif x == 10:
          await message.answer('‚ïì \n‚ïü –ö–∏–¥–æ–∫! üé≥ \n‚ïü –ó–±–∏—Ç–æ –∫–µ–≥–ª—å: 10. \n‚ïü Strike! \n‚ïô')

        else:
          await message.answer(f'‚ïì \n‚ïü –ö–∏–¥–æ–∫! üé≥ \n‚ïü –ó–±–∏—Ç–æ –∫–µ–≥–ª—å: {x}. \n‚ïü –ó–∞–ª–∏—à–∏–ª–æ—Å—è: {10 - x}. \n‚ïô')

      else:
        await message.answer('–Ø –Ω–µ –∑—Ä–æ–∑—É–º—ñ–≤ —Ç–≤–æ—î—ó –∫–æ–º–∞–Ω–¥–∏. –ù–∞–ø–∏—à–∏ "—â–µ" —â–æ–± –ø—Ä–æ–¥–æ–≤–∂–∏—Ç–∏, –∞ –±–æ "–≤–∏—Ö—ñ–¥" —â–æ–± –≤–∏–π—Ç–∏ –∑ —Ä–µ–∂–∏–º—É.')

  else:
    await message.answer('–ú–µ–Ω—ñ –Ω–µ –∑—Ä–æ–∑—É–º—ñ–ª–æ, —â–æ —Ç–∏ –Ω–∞–ø–∏—Å–∞–≤. –©–æ–± –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏, –Ω–∞–ø–∏—à–∏ "–¥–æ–ø–æ–º–æ–≥–∞" –∞–±–æ 01.')

async def main():
  await bot.delete_webhook(drop_pending_updates=True) 
  print('–ë–æ—Ç –ø—Ä–∞—Ü—é—î!')
  await dp.start_polling(bot)

if __name__ == '__main__':
  asyncio.run(main())
